/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaarduino;

import Controlador.Controlador;
import java.awt.BasicStroke;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javaarduino.Ventana.statusHilo;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author grijalvaromero
 */
public class Ventana extends javax.swing.JFrame {
    Controlador controlador;
    
    DefaultTableModel tableModel;
    String[] columnNames = {"Hora", "Mes", "Día", "Año", "Estado"};
    private Object TableMode1;
    
    
    private static final ConexionSerial conexion = new ConexionSerial();
    
    static JFreeChart chart;
    static ChartPanel panel;
    int cont  = 0;    
    Thread hilo;
    public static boolean statusHilo=false;
    /**
     * Creates new form Ventana
     * @param controlador
     */
      
    public Ventana(Controlador controlador) {
        this.controlador=controlador;
        initComponents();
        tableModel = new DefaultTableModel(columnNames, 0);
        jTable1.setModel(tableModel);
          this.setLocationRelativeTo(this);//agrandar pantalla
          
          
        String[] puertos = conexion.obtenerLista().split(",");//conexion de puertos al conectaR laplaca
        DefaultComboBoxModel modelo=new DefaultComboBoxModel();
        for (String puerto : puertos) {
            modelo.addElement(puerto);
        }
        comboPuertos.setModel(modelo);
       
        
    }
    private void reiniciarHilo(){
        statusHilo=true;
         hilo=new Thread(){
          
            @Override
            public void run() {
               while(statusHilo){
               
                   try {
                       consola.setText(consola.getText()+"\n"+conexion.getTodo());
                       crearGrafica();
                       Thread.sleep(2000);
                   } catch (InterruptedException ex) {
                       Logger.getLogger(ConexionSerial.class.getName()).log(Level.SEVERE, null, ex);
                   }
               }
            }
            
        };
    }
    XYSeries dataset = new XYSeries("Temperaturas 1");
    private void crearGrafica() {
        //https://www.tutorialspoint.com/jfreechart/jfreechart_xy_chart.htm
       String[] lecturas= consola.getText().split("\n");
       if(lecturas.length > 0){
           if(!lecturas[lecturas.length-1].trim().equals("")){
               if(Double.parseDouble(lecturas[lecturas.length-1])<50 && Double.parseDouble(lecturas[lecturas.length-1])> -10){
                dataset.add(cont,Double.parseDouble(lecturas[lecturas.length-1]));
                cont++;
               }
           }
           
       }
        
        XYSeriesCollection collection = new XYSeriesCollection();
        collection.addSeries(dataset);
        
        
        chart = ChartFactory.createXYLineChart(
                            "Temperatura", // chart title
                            "Hora", // X axis label
                            "Temperatura", // Y axis label
                            collection, // data
                            PlotOrientation.VERTICAL, 
                            true, // include legend
                            true, // tooltips
                            false // urls
        );
      
        panel = new ChartPanel(chart, true, true, true, false, true);
        panel.setPreferredSize( new java.awt.Dimension( 560 , 367 ) );
        XYPlot plot = chart.getXYPlot( );
        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer( );
        renderer.setSeriesPaint( 0 , Color.RED );
        renderer.setSeriesStroke( 0 , new BasicStroke( 2.0f ) );
        plot.setRenderer( renderer ); 
        jPanel1.setLayout(null);
        panel.setBounds(0,0,jPanel1.getWidth(),jPanel1.getHeight());
        jPanel1.removeAll();
        jPanel1.add(panel);
        jPanel1.repaint();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboPuertos = new javax.swing.JComboBox();
        btnConectar = new javax.swing.JButton();
        lblEstado = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        consola = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        comboPuertos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnConectar.setBackground(new java.awt.Color(255, 51, 255));
        btnConectar.setText("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        lblEstado.setText("Desconectado");

        jButton1.setBackground(new java.awt.Color(102, 255, 0));
        jButton1.setText("Abrir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setText("Cerrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));
        jPanel1.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/puetacerada.jpg"))); // NOI18N
        jLabel1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 20, 274, 349);

        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 10, 260, 380);

        jButton3.setText("Regresar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mes", "Dia", "Año", "Hora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(jTable1);

        consola.setColumns(20);
        consola.setRows(5);
        jScrollPane1.setViewportView(consola);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(comboPuertos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnConectar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEstado)
                        .addGap(93, 93, 93)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(148, 148, 148))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboPuertos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConectar)
                    .addComponent(lblEstado)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        
conexion.conectar(comboPuertos.getSelectedItem().toString ());
conexion.iniciarIO();
conexion.initListener();
// TODO add your handling code here:
        if(btnConectar.getText().equals("Conectar")){
            conexion.conectar(comboPuertos.getSelectedItem().toString());
            conexion.iniciarIO();
            conexion.initListener();
            if(conexion.getConectado()){
                lblEstado.setText("Conectado");
                btnConectar.setText("Desconectar");
                reiniciarHilo();
                hilo.start();
            }else{
                lblEstado.setText("DESCONECTADO");
                hilo.stop();
                statusHilo=false;
            }
        }else{
            btnConectar.setText("Conectar");
            conexion.desconectar();
            hilo.stop();
            statusHilo=false;
        }
        
    }//GEN-LAST:event_btnConectarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        conexion.desconectar();
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        conexion.escribir(1);
        
        String hora = obtenerHoraActual();
        String mes = obtenerMesActual();
        String dia = obtenerDiaActual();
        String anio = obtenerAnioActual();
        String estado = "Abierta";
        Object[] row = {hora, mes, dia, anio, estado};
       tableModel.addRow(row);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          conexion.escribir(2);
          
          
          int ultimaFila = tableModel.getRowCount() - 1;
        String hora = obtenerHoraActual();
        String mes = obtenerMesActual();
        String dia = obtenerDiaActual();
        String anio = obtenerAnioActual();
        String estado = "Cerrada";
        tableModel.setValueAt(estado, ultimaFila, 4);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
controlador.showFormLogin();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel1AncestorAdded
     
// Crea un JLabel con la imagen de la puerta cerrada
ImageIcon puertaCerradaIcon = new ImageIcon("puerta_cerrada.png");
JLabel puertaCerradaLabel = new JLabel(puertaCerradaIcon);
puertaCerradaLabel.setBounds(0, 0, 400, 400);

// Agrega el JLabel al JFrame

    }//GEN-LAST:event_jLabel1AncestorAdded
private String obtenerHoraActual() {
        // Lógica para obtener la hora actual
        return "12:00";
    }
    
    private String obtenerMesActual() {
        // Lógica para obtener el mes actual
        return "Febrero";
    }
    
    private String obtenerDiaActual() {
        // Lógica para obtener el día actual
        return "20";
    }
    
    private String obtenerAnioActual() {
        // Lógica para obtener el año actual
        return "2023";
    }
    
    // Métodos para guardar y actualizar los datos en Firebase
    private void guardarEnFirebase(String hora, String mes, String dia, String anio, String estado) {
        // Lógica para guardar los datos en Firebase
    }
    
    private void actualizarEnFirebase(String hora, String mes, String dia, String anio, String estado) {
        // Lógica para actualizar los datos en Firebase
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Ventana().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JComboBox comboPuertos;
    private static javax.swing.JTextArea consola;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblEstado;
    // End of variables declaration//GEN-END:variables

  
}
